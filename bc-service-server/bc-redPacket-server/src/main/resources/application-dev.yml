spring:
  application:
    name: bc-redPacket-server
  cloud:
    refresh:
      refreshable: none #防止循环依赖
  jackson:
    default-property-inclusion: non_null #不返回空值和null
  redis:
    host: localhost
    port: 6379
    password:
    timeout: 5000 #连接超时 毫秒
    database: 0
    jedis:
      pool:
        maxActive: 3
        maxIdle: 3
        minIdle: 1
        maxWait: -1 #连接池最大等行时间 -1没有限制
  datasource:
    username: root
    password: 'c01tqdsqfz?G'
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost/red_packet?characterEncoding=utf8
    hikari:
      minimum-idle: 5
      maximum-pool-size: 20
      auto-commit: true
      idle-timeout: 30000
      pool-name: DatebookHikariCP
      max-lifetime: 1800000
      connection-timeout: 10000
      connection-test-query: SELECT 1

server:
  port: 8083
  servlet:
    context-path: /redPacket

eureka:
  instance:
    lease-renewal-interval-in-seconds: 2
    lease-expiration-duration-in-seconds: 3
  client:
    #表示是否将自己注册到Eureka Server，默认为true。测试环境下关闭注册，都在热部署会报错
    register-with-eureka: false
    #表示是否从Eureka Server获取注册信息，默认为true。
    fetch-registry: false
    serviceUrl:
      defaultZone: http://localhost:8761/eureka

ribbon:
  MaxAutoRetries: 2 #最大重试次数，当Eureka中可以找到服务，但是服务连不上时将会重试
  MaxAutoRetriesNextServer: 3 #切换实例的重试次数
  OkToRetryOnAllOperations: false  #对所有操作请求都进行重试，如果是get则可以，如果是post，put等操作没有实现幂等的情况下是很危险的,所以设置为false
  ConnectTimeout: 5000  #请求连接的超时时间
  ReadTimeout: 6000 #请求处理的超时时间

#放行uri(测试需要)
redPacket:
  permitUrl: /**


#日志文件路径
logging:
  config: classpath:log4j2-dev.xml